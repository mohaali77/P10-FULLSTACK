name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend - Tests & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Run backend tests with JaCoCo
        run: mvn clean verify
        working-directory: back

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco

      # Lance l'analyse SonarCloud (utilise le rapport JaCoCo généré par les tests)
      - name: Run SonarCloud analysis (backend)
        working-directory: back
        run: |
          mvn -B -q sonar:sonar \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_BACK }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml


  frontend-tests:
    name: Frontend - Tests & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: front

      - name: Run Angular tests with coverage
        run: npm run test -- --watch=false --code-coverage
        working-directory: front

      - name: Upload Angular coverage report
        uses: actions/upload-artifact@v4
        with:
          name: angular-coverage
          path: front/coverage

  # Installe le scanner Sonar pour le front
      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner

      # Lance l'analyse SonarCloud (front)
      - name: Run SonarCloud analysis (frontend)
        working-directory: front

        run: |
          sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_FRONT }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sources=src \
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info